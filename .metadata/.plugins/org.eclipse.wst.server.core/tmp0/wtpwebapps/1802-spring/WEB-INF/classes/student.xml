<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="std">
	<select id='login' parameterType="bean.StudentVo" resultType="int">
		select count(id) from student
		where  id=#{id} and pwd=#{pwd}
	</select>

	<!-- 아이디나 연락처로 아이디 암호 이메일로 전송하기 위해 -->
	<select id="find_id" parameterType="String" resultType="bean.StudentVo">
		select * from student 
		where id = #{_parameter}
		or    phone = #{_parameter}
	</select>
	
	<select id='page_count' parameterType="String" resultType="int">
		select count(id) from student 
		where id    like '%${_parameter}%' 
		or    name  like '%${_parameter}%'
		or    phone like '%${_parameter}%'
	</select>
	
	<select id="select" parameterType="bean.PageVo" resultType="bean.StudentVo">
		select * from 
		(
			select rownum rnum, a.* from
			(
					select * from student 
					where id    like '%${findStr}%' 
					or    name  like '%${findStr}%'
					or    phone like '%${findStr}%'
					order by name asc, rdate
			)a
		) 
		where rnum between ${startNo} and ${endNo}
	</select>
	
	<insert id="insert" parameterType="bean.StudentVo">
		insert into student(id, name, pwd, phone, email, 
		       address, post, photo, photoori, rdate)
		values(#{id}, #{name}, #{pwd}, #{phone},#{email},
		       #{address}, #{post}, #{photo},#{photoOri}, sysdate)
	</insert>
	
	<!-- view, modify에서 사용 -->
	<select id="select_one" parameterType="string" resultType="bean.StudentVo">
		select * from student where id = #{_parameter}
	</select>
	
	<update id="update" parameterType="bean.StudentVo">
		update student set 
			name    = #{name},
			phone   = #{phone},
			email   = #{email},
			address = #{address},
			post    = #{post}
			
			<if test="photo != null">
				, photo    = #{photo}
				, photoOri = #{photoOri}
			</if>
			where id = #{id} and pwd = #{pwd}
	</update>	


	<delete id='delete' parameterType="bean.StudentVo">
		delete from student where id=#{id} and pwd = #{pwd} 
	
	</delete>

	
</mapper>	
















